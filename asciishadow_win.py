shadow_font = {
    'A': [
        ' █████╗ ',
        '██╔══██╗',
        '███████║',
        '██╔══██║',
        '██║  ██║',
        '╚═╝  ╚═╝'
    ],
    'B': [
        '██████╗ ',
        '██╔══██╗',
        '██████╔╝',
        '██╔══██╗',
        '██████╔╝',
        '╚═════╝ '
    ],
    'C': [
        ' ██████╗',
        '██╔════╝',
        '██║     ',
        '██║     ',
        '╚██████╗',
        ' ╚═════╝'
    ],
    'D': [
        '██████╗ ',
        '██╔══██╗',
        '██║  ██║',
        '██║  ██║',
        '██████╔╝',
        '╚═════╝ '
    ],
    'E': [
        '███████╗',
        '██╔════╝',
        '█████╗ ',
        '██╔══╝ ',
        '███████╗',
        '╚══════╝'
    ],
    'F': [
        '███████╗',
        '██╔════╝',
        '█████╗ ',
        '██╔══╝ ',
        '██║    ',
        '╚═╝    '
    ],
    'G': [
        ' ██████╗ ',
        '██╔════╝ ',
        '██║  ███╗',
        '██║   ██║',
        '╚██████╔╝',
        ' ╚═════╝ '
    ],
    'H': [
        '██╗  ██╗',
        '██║  ██║',
        '███████║',
        '██╔══██║',
        '██║  ██║',
        '╚═╝  ╚═╝'
    ],
    'I': [
        '██╗',
        '██║',
        '██║',
        '██║',
        '██║',
        '╚═╝'
    ],
    'J': [
        '     ██╗',
        '     ██║',
        '     ██║',
        '██╗  ██║',
        '╚█████╔╝',
        ' ╚════╝ '
    ],
    'K': [
        '██╗  ██╗',
        '██║ ██╔╝',
        '█████╔╝ ',
        '██╔═██╗ ',
        '██║  ██╗',
        '╚═╝  ╚═╝'
    ],
    'L': [
        '██╗     ',
        '██║     ',
        '██║     ',
        '██║     ',
        '███████╗',
        '╚══════╝'
    ],
    'M': [
        '███╗   ███╗',
        '████╗ ████║',
        '██╔████╔██║',
        '██║╚██╔╝██║',
        '██║ ╚═╝ ██║',
        '╚═╝     ╚═╝'
    ],
    'N': [
        '███╗  ██╗',
        '████╗ ██║',
        '██╔██╗██║',
        '██║╚████║',
        '██║ ╚███║',
        '╚═╝  ╚══╝'
    ],
    'O': [
        ' ██████╗ ',
        '██╔═══██╗',
        '██║   ██║',
        '██║   ██║',
        '╚██████╔╝',
        ' ╚═════╝ '
    ],
    'P': [
        '██████╗ ',
        '██╔══██╗',
        '██████╔╝',
        '██╔═══╝ ',
        '██║     ',
        '╚═╝     '
    ],
    'Q': [
        ' ██████╗ ',
        '██╔═══██╗',
        '██║   ██║',
        '██║▄▄ ██║',
        '╚██████╔╝',
        ' ╚══▀▀═╝ '
    ],
    'R': [
        '██████╗ ',
        '██╔══██╗',
        '██████╔╝',
        '██╔══██╗',
        '██║  ██║',
        '╚═╝  ╚═╝'
    ],
    'S': [
        ' ███████╗',
        '██╔════╝ ',
        '███████╗ ',
        '╚════██╗ ',
        '███████║ ',
        '╚══════╝ '
    ],
    'T': [
        '████████╗',
        '╚══██╔══╝',
        '   ██║   ',
        '   ██║   ',
        '   ██║   ',
        '   ╚═╝   '
    ],
    'U': [
        '██╗   ██╗',
        '██║   ██║',
        '██║   ██║',
        '██║   ██║',
        '╚██████╔╝',
        ' ╚═════╝ '
    ],
    'V': [
        '██╗   ██╗',
        '██║   ██║',
        '╚██╗ ██╔╝',
        ' ╚████╔╝ ',
        '  ╚██╔╝  ',
        '   ╚═╝   '
    ],
    'W': [
        '██╗    ██╗',
        '██║    ██║',
        '██║ █╗ ██║',
        '██║███╗██║',
        '╚███╔███╔╝',
        ' ╚══╝╚══╝ '
    ],
    'X': [
        '██╗  ██╗',
        '╚██╗██╔╝',
        ' ╚███╔╝ ',
        ' ██╔██╗ ',
        '██╔╝ ██╗',
        '╚═╝  ╚═╝'
    ],
    'Y': [
        '██╗   ██╗',
        '╚██╗ ██╔╝',
        ' ╚████╔╝ ',
        '  ╚██╔╝  ',
        '   ██║   ',
        '   ╚═╝   '
    ],
    'Z': [
        '███████╗',
        '╚══███╔╝',
        '  ███╔╝ ',
        ' ███╔╝  ',
        '███████╗',
        '╚══════╝'
    ],
    '0': [
        ' █████╗ ',
        '██╔═██╗ ',
        '██║ ██║ ',
        '██║ ██║ ',
        '╚██║██╔╝',
        ' ╚████╝ '
    ],
    '1': [
        '  ██╗',
        ' ███║',
        ' ╚██║',
        '  ██║',
        '  ██║',
        '  ╚═╝'
    ],
    '2': [
        '██████╗ ',
        '╚═══██╗ ',
        ' █████║ ',
        '██╔═══╝ ',
        '███████╗',
        '╚══════╝'
    ],
    '3': [
        '██████╗ ',
        '╚═══██╗ ',
        ' █████║ ',
        ' ╚═══██╗',
        '██████╔╝',
        '╚═════╝ '
    ],
    '4': [
        '██╗  ██╗',
        '██║  ██║',
        '███████║',
        '╚════██║',
        '     ██║',
        '     ╚═╝'
    ],
    '5': [
        '███████╗',
        '██╔════╝',
        '██████╗ ',
        '╚════██╗',
        '██████╔╝',
        '╚═════╝ '
    ],
    '6': [
        ' ██████╗ ',
        '██╔════╝ ',
        '███████╗ ',
        '██╔═══██╗',
        '╚██████╔╝',
        ' ╚═════╝ '
    ],
    '7': [
        '███████╗',
        '╚══███╔╝',
        '   ███╔╝ ',
        '  ███╔╝  ',
        ' ███╔╝   ',
        ' ╚═╝     '
    ],
    '8': [
        ' █████╗ ',
        '██╔══██╗',
        '╚█████╔╝',
        '██╔══██╗',
        '╚█████╔╝',
        ' ╚════╝ '
    ],
    '9': [
        ' █████╗ ',
        '██╔══██╗',
        '╚██████║',
        ' ╚═══██║',
        ' █████╔╝',
        ' ╚════╝ '
    ],
    ' ': [
        '     ',
        '     ',
        '     ',
        '     ',
        '     ',
        '     '
    ],
    '!': [
        '██╗',
        '██║',
        '██║',
        '╚═╝',
        '██╗',
        '╚═╝'
    ],
    '?': [
        '██████╗ ',
        '╚═══██╗ ',
        '  ██╔╝  ',
        '  ╚═╝   ',
        '  ██╗   ',
        '  ╚═╝   '
    ],
}

import argparse
import sys
import pyperclip

def text_to_shadow(text):
    lines = [''] * 6
    for char in text.upper():
        if char in shadow_font:
            char_lines = shadow_font[char]
            max_width = max(len(line) for line in char_lines)
            padded_lines = [line.ljust(max_width) for line in char_lines]
            for i in range(6):
                lines[i] += padded_lines[i] + '  '
        else:
            for i in range(6):
                lines[i] += ' ' * 8 + '  '
    return '\n'.join([line.rstrip() for line in lines])

def main():
    parser = argparse.ArgumentParser(description="Generar texto en formato sombra y copiarlo al portapapeles.")
    parser.add_argument("texto", type=str, help="El texto a convertir y copiar")
    args = parser.parse_args()
    
    shadow_text = text_to_shadow(args.texto)
    
    try:
        pyperclip.copy(shadow_text)
        print("Texto copiado al portapapeles correctamente.", file=sys.stderr)
    except pyperclip.PyperclipException as e:
        print(f"Error al copiar al portapapeles: {e}", file=sys.stderr)
        sys.exit(1)
    
    print(shadow_text)

if __name__ == "__main__":
    main()
